---
- name: create blocklist directory - osx
  when: hostvars[inventory_hostname]['ansible_system'] == "Darwin"
  action: file path="~/Library/Application Support/Transmission/blocklists" state=directory

- name: create blocklist directory - linux
  when: hostvars[inventory_hostname]['ansible_os_family'] == "Linux"
  action: file path="~/.config/transmission/blocklists/list" state=directory

- name: create tmp directory
  action: file path=/tmp/blocklist state=directory

- name: get blocklists
  register: get_blocklists
  action: get_url url="http://list.iblocklist.com/?list={{ item }}&fileformat=p2p&archiveformat=gz" dest="/tmp/blocklist/{{ item }}.gz"
  with_items:
    - bt_level2
    - bt_level3
    - bt_edu
    - bt_ads
    - bt_spyware
    - bt_proxy
    - bt_templist
    - bt_microsoft
    - bt_spider
    - bt_hijacked
    - bt_dshield
    - ficutxiwawokxlcyoeye
    - ghlzqtqxnzctvvajwwag
    - ijfqtofzixtwayqovmxn
    - ecqbsykllnadihkdirsh
    - jcjfaxgyyshvdbceroxf
    - lljggjrpmefcwqknpalp

- name: unarchive blocklists
  register: unarchive_blocklists
  when: get_blocklists.changed
  action: shell gzip -cd {{ item }} >> /tmp/blocklist/list
  with_fileglob:
    - /tmp/blocklist/*.gz

- name: copy blocklist - osx
  register: copy_blocklist
  when: hostvars[inventory_hostname]['ansible_os_family'] == "Darwin" and get_blocklists.changed
  action: copy src=/tmp/blocklist/list dest="~/Library/Application Support/Transmission/blocklists/list" force=yes

- name: copy blocklist - linux
  register: copy_blocklist
  when: hostvars[inventory_hostname]['ansible_os_family'] == "Linux" and get_blocklists.changed
  action: copy src=/tmp/blocklist/list dest="~/.config/transmission/blocklists/list" force=yes

- name: remove old blocklist
  when: copy_blocklist.changed
  action: file state=absent path="/tmp/blocklist/list"
